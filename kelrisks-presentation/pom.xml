<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>kelrisks</artifactId>
		<groupId>fr.gouv.beta.fabnum</groupId>
		<version>${revision}</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<modelVersion>4.0.0</modelVersion>

	<artifactId>kelrisks-presentation</artifactId>
	<packaging>jar</packaging>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<dependencies>

		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-actuator</artifactId> -->
		<!-- </dependency> -->

		<!-- jsoup HTML parser library @ https://jsoup.org/ -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.itextpdf/itext7-core -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itext7-core</artifactId>
			<version>${itext7-core.version}</version>
			<type>pom</type>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.itextpdf/html2pdf -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>html2pdf</artifactId>
			<version>${html2pdf.version}</version>
		</dependency>

		<!-- test remplacement itext -->
		<!-- <dependency> -->
		<!-- <groupId>org.xhtmlrenderer</groupId> -->
		<!-- <artifactId>flying-saucer-pdf-openpdf</artifactId> -->
		<!-- <version>9.1.20</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>com.github.librepdf</groupId> -->
		<!-- <artifactId>openpdf</artifactId> -->
		<!-- <version>1.3.20</version> -->
		<!-- </dependency> -->


		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>${redisson.version}</version>
		</dependency>

		<!--<dependency> -->
		<!--<groupId>org.postgresql</groupId> -->
		<!--<artifactId>postgresql</artifactId> -->
		<!--</dependency> -->

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${javax.ws.rs.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.kenglxn.qrgen</groupId>
			<artifactId>javase</artifactId>
			<version>2.6.0</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>kelrisks</finalName>
		<plugins>
		    <!-- https://rmannibucau.metawerx.net/post/docker-image-and-jib-creation-time -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.0</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<phase>initialize</phase>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>false</generateGitPropertiesFile>
					<dateFormat>yyyy-MM-dd'T'HH:mm:ss'Z'</dateFormat>
					<dateFormatTimeZone>GMT</dateFormatTimeZone>
					<includeOnlyProperties>
						<includeOnlyProperty>^git.commit.time$</includeOnlyProperty>
					</includeOnlyProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<from>
						<image>gcr.io/distroless/java:11</image>
					</from>
					<to>
						<image>${registry}${registry.repository}/${project.artifactId}:${project.version}</image>
					</to>
					<!-- to not run the container with root, run with admin_user:application, echo $(id -u):$(id -g) -->
					<container>
						<creationTime>${git.commit.time}</creationTime>
						<filesModificationTime>${git.commit.time}</filesModificationTime>
						<user>503:500</user>
					</container>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>11</source>
					<target>11</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.defaultComponentModel=spring
						</compilerArg>
						<compilerArg>
							-Amapstruct.unmappedTargetPolicy=IGNORE
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- Configure la génération de sources de QueryDSL -->
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>${maven.apt.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/querydsl</outputDirectory>
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
							<options>
								<querydsl.entityAccessors>true</querydsl.entityAccessors>
								<!--<querydsl.includedPackages>fr.gouv.rie.e2.application.bdpamm.transverse,i2.application.commun.transverse</querydsl.includedPackages> -->
							</options>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<configuration>
					<skip>false</skip>
					<configFile>src/main/resources/flyway.properties</configFile>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application-*.properties</include>
				</includes>
			</resource>
			<resource>
				<!-- copy Vue.js frontend content -->
				<directory>../kelrisks-vue/dist</directory>
				<!-- We put this into the static directory so that Spring Boot serves it through HTTP as static content -->
				<targetPath>public</targetPath>
			</resource>
		</resources>
	</build>

</project>
